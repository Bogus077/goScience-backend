version: '3.3'

services:
  # nginx:
  #   container_name: GS-back-nginx
  #   build:
  #     context: .
  #     dockerfile: docker/nginx.Dockerfile
  #   ports:
  #     - 3000:3000
  #   depends_on:
  #     - nodejs
  nodejs:
    entrypoint: [sh, -c, 'npm run dev']
    hostname: 'nodejs'
    container_name: GS-back-srv
    build:
      context: .
      dockerfile: docker/node.Dockerfile
    ports:
      - 3000:3000
    links:
      - pgdb:pgdb
    volumes:
      - ./:/var/www/granite/
    extra_hosts:
      - 'smtp.yandex.ru:77.88.21.158'
  pgdb:
    image: postgres:14-alpine
    container_name: GS-back-pgdb
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data

  directus:
    image: directus/directus:10.10.4
    ports:
      - 8056:8055
    volumes:
      - ./database:/directus/database
      - ./uploads:/directus/uploads
      - ./extensions:/directus/extensions
    links:
      - pgdb:pgdb
    environment:
      KEY: ${DIRECTUS_KEY}
      SECRET: ${DIRECTUS_SECRET}
      ADMIN_EMAIL: "bogus077@gmail.com"
      ADMIN_PASSWORD: ${DIRECTUS_PASSWORD}
      DB_CLIENT: pg
      DB_HOST: ${POSTGRES_HOST}
      DB_PORT: ${POSTGRES_PORT}
      DB_DATABASE: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}

volumes:
  pgdata:
